@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    var expireMinutes = Configuration.GetSection("CookieAuthentication").GetSection("ExpireMinutes").Value;
}

<div id="modalSessionExpire" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body p-4">
                <div class="text-center text-muted">
                    <i class="dripicons-warning h1 text-warning"></i>
                    <h4 class="mt-2">
                        Session Alert !!
                    </h4>
                    <p class="mt-3">
                        Your session will expire within <br /> <span id="lbltimeOut" class="h3"></span><br> <br /> Please first save your data.
                    </p>
                    <a class="btn btn-dark btn-sm" style="cursor: pointer" asp-controller="Account" asp-action="Logout" asp-area="Admin">
                        Logout
                    </a>
                    <button id="stay-logged-in-button" class="btn btn-warning btn-sm" style="cursor: pointer">
                        Ok
                    </button>

                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<script type="text/javascript">
    //session end
    $('#lbltime').hide();
    var sessionTimeoutWarning = @expireMinutes;    
    var x;
    var sTimeout = parseInt(sessionTimeoutWarning) * 60 * 1000;// convert minutes to milliseconds;
    setTimeout('SessionEnd()', sTimeout - 300000); // 5*60*1000 before five minutes open popup
    function SessionEnd() {
        var countDownDate = new Date().getTime() + (5 * 60000);//
        // Update the count down every 1 second
            x = setInterval(function () {
            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;
            // Time calculations for days, hours, minutes and seconds
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Output the result in an element with id="demo"
                $('#lbltimeOut').text(minutes + "M :" + seconds + "S ");
                $('#lbltime').text("Your session will expire within " + minutes + "M :" + seconds + "S ");

            // If the count down is over, write some text
            if (distance < 30000) {
                clearInterval(x);
                window.location.href = '@Url.Action("Logout","Account",new { Area ="Admin"})';
            }
        }, 1000);
        $('#lbltime').show();
        $("#modalSessionExpire").modal('show');
    }

    function ExtentSessionMethod() {
        $("#modalSessionExpire").modal('hide');
    }

    $("#stay-logged-in-button").click(function() {
        $.get("@Url.Action("KeepAlive", "Account", new {area = "Admin"})",
            null,
            function (data) {
                $('#lbltime').hide();
                clearInterval(x);
                setTimeout('SessionEnd()', (parseInt(sessionTimeoutWarning) * 60 * 1000) - 300000);
                $("#modalSessionExpire").modal('hide');
            }
        );
    });

</script>
