@model CSRPulse.Model.QuickEmail
<form data-ajax="true" data-ajax-method="POST" asp-controller="QuickEmail" asp-action="QuickEmail" data-ajax-success="onSuccess">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-2">
        <label asp-for="To" class="form-label"></label>
        <input type="text" asp-for="To" class="form-control" placeholder="Example@email.com" required autocomplete="off" />
        <span asp-validation-for="To" class="text-danger"></span>
    </div>
    <div class="mb-2">
        <label asp-for="Subject" class="form-label"></label>
        <input type="text" asp-for="Subject" class="form-control" placeholder="Your subject" required autocomplete="off" />
        <span asp-validation-for="Subject" class="text-danger"></span>
    </div>
    <div class="mb-2">
        <label asp-for="Message" class="form-label"></label>
        <textarea asp-for="Message" id="comments" rows="4" class="form-control" placeholder="Type your message here..."></textarea>
        <span asp-validation-for="Message" class="text-danger"></span>
    </div>
    <div class="mt-2">
        <div class="col-12 text-end">
            <button class="btn btn-primary">
                Send <i class="mdi mdi-telegram ms-1"></i>
            </button>
        </div>
    </div>
</form>
<script>
    function onSuccess(data) {
        if (data.success == true) {
            commonMessage('success', 'Email send successfully.');
        }
        else {
            commonMessage('warning', 'Email sending failed');
        }
        $("#form-container").html(data.htmlData);
    }

</script>