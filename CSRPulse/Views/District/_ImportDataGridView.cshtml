@using Nafed.MicroPay.Model;
@using System.Data;
@model MicroPay.Web.Models.ImportProcessApproverVM

@{
    Layout = null;

    var validationResultMsg = Model.Message;

    var msgClass = Model.NoOfErrors > 0 ? "alert alert-danger" : "alert alert-success";

    validationResultMsg = Model.NoOfErrors == -1 ? "Please select file." :
        Model.NoOfErrors == -2 ? "Please select valid file." : validationResultMsg;

    msgClass = Model.NoOfErrors == -1 ? "alert alert-danger" :
    Model.NoOfErrors == -2 ? "alert alert-danger" : msgClass;
}

<script src="~/Scripts/popper.min.js"></script>

<script>
    $('.toggle-tooltip').tooltip();
    if(@Model.NoOfErrors==0){
        $('#btnSave').removeClass('hide');
    }
</script>

<div id="validation-hdr" class="pull-right" role="alert">

    <span class="text-right @msgClass">
        @validationResultMsg
    </span>

</div>

@if (Model.inputData.Rows.Count > 0)
{
    <div id="tblProcessApprovers" style="max-width:93%;min-width:100%;
         min-height:600px;max-height:600px;overflow-x:scroll;overflow-y:scroll;">

        <table id="" class="table table-centered table-bordered dt-responsive w-100">
            <thead>
                <tr>
                    @if (Model.columnName != null && Model.columnName.Count > 0)
                    {
                        <th style="vertical-align:middle;background-color:darkgray;text-align:right; width:5%;">
                            #
                        </th>

                        foreach (var item in Model.columnName)
                        {
                            if (item != "EmployeeId" && item != "ReportingToID"
                                    && item != "ReviewerToID"
                                    && item != "AcceptanceToID"
                                    && item != "error" && item != "warning" && item != "isDuplicatedRow")
                            {
                                <th style="vertical-align:middle;background-color:darkgray;">
                                    @item
                                </th>
                            }
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @{
                                if (Model != null && Model.inputData.Rows.Count > 0)
                                {
                                    Dictionary<string, string> dicErrorMsg = Model.ErrorMsgCollection;
                                    string str1 = string.Empty;
                                    var title = string.Empty;
                                    try
                                    {
                                        int rowIndex = 1;
                                        foreach (DataRow dr in Model.inputData.Rows)
                                        {
                                            int err = 0;
                                            string[] arrError = dr["error"].ToString().Split('|').ToArray();
                                            if (!Convert.ToBoolean(dr["isDuplicatedRow"]))
                                            {
                                    <tr>

                                        <td align="right" style="width:5%;">

                                            @rowIndex
                                            
                                        </td>


                                        @foreach (DataColumn dc in Model.inputData.Columns)
                                                    {
                                                    try
                                                    {
                                                        if (dc.ToString() != "EmployeeId" && dc.ToString() != "ReportingToID"
                                            && dc.ToString() != "ReviewerToID"
                                            && dc.ToString() != "AcceptanceToID" && dc.ToString() != "error" && dc.ToString() != "warning" && dc.ToString() != "isDuplicatedRow")
                                                        {
                                                            if (dc.ToString() == "EmployeeCode" || dc.ToString() == "BranchName" || dc.ToString() == "Month" || dc.ToString() == "Year")
                                                            {
                                                                title = (arrError[err].Length > 0) ? string.Format(dicErrorMsg[arrError[err]], dc.ToString()) : "";
                                                            }
                                                            else
                                                            {
                                                                title = (arrError[err].Length > 0) ? string.Format(dicErrorMsg[arrError[err]], dc.ToString()) : "";
                                                            }
                                                            var errorClass = (arrError[err].Length > 0) ? "error" : null;
                                                            str1 = dr[dc].ToString();
                                                    <td title="@title" class="toggle-tooltip @errorClass"> @str1</td>
                        }
                        err++;
                                            }
                                            catch (Exception ex)
                                            {
                                                var dd = dc.ToString();
                    var dd_0 = dr[dc].ToString();
                                                throw ex;
                                            }
                                        }
                                    </tr>
                                }
                                else
                                {
                                    <tr title="Duplicate Row Found" class="error toggle-tooltip">

                                        @foreach (DataColumn dc in Model.inputData.Columns)
                    {
                        if (dc.ToString() != "EmployeeId" && dc.ToString() != "ReportingToID"
                && dc.ToString() != "ReviewerToID"
                && dc.ToString() != "AcceptanceToID"
                            && dc.ToString() != "error" && dc.ToString() != "warning"
                            && dc.ToString() != "isDuplicatedRow"
                          )
                        {
                            if (dc.ToString() == "E.Code"
                               || dc.ToString() == "ReportingTo"
                               || dc.ToString() == "Reviewer"
                               || dc.ToString() == "Acceptance Code")
                            {
                                title = (arrError[err].Length > 0) ? string.Format(dicErrorMsg[arrError[err]], dc.ToString()) : "";
                            }
                            else
                            {
                                title = (arrError[err].Length > 0) ? string.Format(dicErrorMsg[arrError[err]], dc.ToString()) : "";
                            }
                            var errorClass = (arrError[err].Length > 0) ? "error" : null;
                            str1 = dr[dc].ToString();
                                                <td title="@title" class="toggle-tooltip @errorClass"> @str1</td>
                                            }
                                            err++;
                                        }
                                    </tr>
                                }

                                rowIndex++;
                            }
                        }
                        catch (Exception ex)
                        {
                            throw ex;
                        }
                    }
                }
            </tbody>
        </table>

    </div>
                    }
                    else
                    {
                        <br />
                        <div class="text-right">

                        </div>


                    }