
@{
    ViewData["Title"] = "SubActivity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">CSRPulse</a></li>
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Master</a></li>
                    <li class="breadcrumb-item active">SubActivity</li>
                </ol>
            </div>
            <h4 class="page-title">SubActivity List</h4>
        </div>
    </div>
</div>

<div class="row">
    @{await Html.RenderPartialAsync("_Filter");}
</div>
<div class="row" id="div-subactivity-list">

</div>

<div id="info-header-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="info-header-modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-colored-header bg-info">
                <h4 class="modal-title" id="info-header-modalLabel">Confirmation</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body">
                Do you want to perform this action ?.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">No</button>
                <button type="button" onclick="ActiveDeActive(this)" class="btnconfirm btn btn-info" data-bs-dismiss="modal">Yes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


@section Scripts{
    <script type="text/javascript">
        function openpopup(cnt) {
            var id = cnt.id.split('_')[1];
            $('.btnconfirm').attr('id', id + '_' + cnt.checked);

        }
        function ActiveDeActive(obj) {
            var id = obj.id.split('_')[0];
            var isChecked = obj.id.split('_')[1];
            $.ajax({
                type: 'POST',
                dataType: 'JSON',
                url: '@Url.Content("~/")' +"/Activity/ActiveDeActive",
                data: { id: id, isChecked: isChecked },
                success: function (responce) {
                    if (responce) {
                        commonMessage('success', 'Status changed successfully.');
                    }

                    else {
                        commonMessage('warning', 'Status changing failed.');
                    }
                },
                error: function (responce) {
                    commonMessage('error', 'Status changing failed.');
                }
            });
        }

        $(document).ready(function () {
            $('#ThemeId').change(function () {
                debugger;
                $.ajax({
                    type: 'GET',
                    dataType: 'JSON',
                    url: '@Url.Content("~/")' + "SubActivity/BindActivityDropdown",
                    data: { themeId: $('#ThemeId').val()},
                    success: function (data) {
                        var items = '';
                        $('#ActivityId').empty();
                        $.each(data, function(i, activity) {
                            items += "<option value='" + activity.value + "'>" + activity.text+"</option>"
                        });
                        $('#ActivityId').html(items);
                    },
                    error: function (responce) {
                        commonMessage('error', 'error occurred on bind subActivity dropdown.');
                    }
                });
            });

        });
    </script>
}

